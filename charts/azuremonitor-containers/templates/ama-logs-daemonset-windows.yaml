{{- if not (.Values.amalogs.useAADAuth) }}
{{- if and (ne .Values.amalogs.secret.key "<your_workspace_key>") (ne .Values.amalogs.secret.wsid "<your_workspace_id>") (or (ne .Values.amalogs.env.clusterName "<your_cluster_name>") (ne .Values.amalogs.env.clusterId "<your_cluster_id>") (ne .Values.Azure.Cluster.ResourceId "<your_cluster_id>") )}}
apiVersion: apps/v1
kind: DaemonSet
metadata:
 name: ama-logs-windows
 namespace: kube-system
 labels:
   chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
   release: {{ .Release.Name }}
   heritage: {{ .Release.Service }}
   component: ama-logs-agent-windows
   tier: node-win
spec:
 updateStrategy:
  type: RollingUpdate
 selector:
   matchLabels:
     dsName: "ama-logs-ds"
 template:
  metadata:
   labels:
    dsName: "ama-logs-ds"
   annotations:
    agentVersion: {{ .Values.amalogs.image.winAgentVersion }}
    dockerProviderVersion: {{ .Values.amalogs.image.dockerProviderVersion }}
    schema-versions: "v1"
    checksum/secret: {{ include (print $.Template.BasePath "/ama-logs-secret.yaml") . | sha256sum }}
    checksum/config: {{ toYaml .Values.amalogs.resources | sha256sum }}
  spec:
   priorityClassName: ama-logs
   dnsConfig:
     options:
       - name: ndots
         value: "3"
{{- if semverCompare ">=1.14-0" .Capabilities.KubeVersion.Version }}
   nodeSelector:
      kubernetes.io/os: windows
{{- else }}
   nodeSelector:
      kubernetes.io/os: windows
{{- end }}
   {{- if .Values.amalogs.rbac }}
   serviceAccountName: ama-logs
   {{- end }}
   containers:
     - name: ama-logs-windows
       image: {{ printf "%s:%s" .Values.amalogs.image.repo .Values.amalogs.image.tagWindows }}
       imagePullPolicy: IfNotPresent
       resources:
{{ toYaml .Values.amalogs.resources.daemonsetwindows | indent 9 }}
       securityContext:
        capabilities:
          drop:
            - ALL
          add:
            - DAC_OVERRIDE
       env:
       - name: FBIT_SERVICE_FLUSH_INTERVAL
         value: "15"
       - name: FBIT_TAIL_BUFFER_CHUNK_SIZE
         value: "1"
       - name: FBIT_TAIL_BUFFER_MAX_SIZE
         value: "1"
       {{- if ne .Values.amalogs.env.clusterId "<your_cluster_id>" }}
       - name: AKS_RESOURCE_ID
         value: {{ .Values.amalogs.env.clusterId | quote }}
       {{- if ne .Values.amalogs.env.clusterRegion "<your_cluster_region>" }}
       - name: AKS_REGION
         value: {{ .Values.amalogs.env.clusterRegion | quote }}
       {{- end }}
       {{- else if ne .Values.Azure.Cluster.ResourceId "<your_cluster_id>" }}
       - name: AKS_RESOURCE_ID
         value: {{ .Values.Azure.Cluster.ResourceId | quote }}
       - name: USING_AAD_MSI_AUTH
         value: {{ .Values.amalogs.useAADAuth | quote }}
       {{- if ne .Values.Azure.Cluster.Region "<your_cluster_region>" }}
       - name: AKS_REGION
         value: {{ .Values.Azure.Cluster.Region | quote }}
       {{- end }}
       {{- else }}
       - name: ACS_RESOURCE_NAME
         value: {{ .Values.amalogs.env.clusterName | quote }}
       {{- end }}
       - name: CONTROLLER_TYPE
         value: "DaemonSet"
       - name: HOSTNAME
         valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
       - name: CONTAINER_MEMORY_LIMIT_IN_BYTES
         valueFrom:
           resourceFieldRef:
             containerName: ama-logs-windows
             resource: limits.memory
       - name: NODE_IP
         valueFrom:
            fieldRef:
              fieldPath: status.hostIP
       - name: PODNAME
         valueFrom:
            fieldRef:
              fieldPath: metadata.name
       - name: SIDECAR_SCRAPING_ENABLED
         value: {{ .Values.amalogs.sidecarscraping | quote }}
       - name: ENABLE_CUSTOM_METRICS
         value: {{ .Values.amalogs.enableCustomMetrics | quote }}
       {{ if .Values.amalogs.ISTEST }}
       - name: AZMON_KUBERNETES_METADATA_ENABLED
         value: "true"
       {{- end }}
       volumeMounts:
        #  Uncomment when telegraf upgraded to 1.28.5 or higher
        # {{- if .Values.amalogs.enableServiceAccountTimeBoundToken }}
        # - name: kube-api-access
        #   mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        #   readOnly: true
        # {{- end }}
        - mountPath: C:\ProgramData\docker\containers
          name: docker-windows-containers
          readOnly: true
        - mountPath: C:\var #Read + Write access on this for position file
          name: docker-windows-kuberenetes-container-logs
        - mountPath: C:\etc\config\settings
          name: settings-vol-config
          readOnly: true
        - mountPath: C:\etc\ama-logs-secret
          name: ama-logs-secret
          readOnly: true
       livenessProbe:
          exec:
            command:
              - cmd
              - /c
              - C:\opt\amalogswindows\scripts\cmd\livenessprobe.exe
              - fluent-bit.exe
              - fluentdwinaks
              - "C:\\etc\\amalogswindows\\filesystemwatcher.txt"
              - "C:\\etc\\amalogswindows\\renewcertificate.txt"
          periodSeconds: 60
          initialDelaySeconds: 180
          timeoutSeconds: 15
   {{- if .Values.amalogs.scheduleOnTaintedNodes }}
   {{- with .Values.amalogs.tolerationsUnrestricted }}
   tolerations: {{- toYaml . | nindent 8 }}
   {{- end }}
   {{- else }}
   {{- with .Values.amalogs.tolerations }}
   tolerations: {{- toYaml . | nindent 8 }}
   {{- end }}
   {{- end }}
   volumes:
    #  Uncomment when telegraf upgraded to 1.28.5 or higher
    # {{- if .Values.amalogs.enableServiceAccountTimeBoundToken }}
    # - name: kube-api-access
    #   projected:
    #     sources:
    #      - serviceAccountToken:
    #          path: token
    #          expirationSeconds: 3600
    #      - configMap:
    #          items:
    #          - key: ca.crt
    #            path: ca.crt
    #          name: kube-root-ca.crt
    #      - downwardAPI:
    #          items:
    #          - fieldRef:
    #              apiVersion: v1
    #              fieldPath: metadata.namespace
    #            path: namespace
    # {{- end }}
    - name: docker-windows-kuberenetes-container-logs
      hostPath:
        path: C:\var
    - name: docker-windows-containers
      hostPath:
        path: C:\ProgramData\docker\containers
        type: DirectoryOrCreate
    - name: settings-vol-config
      configMap:
        name: container-azm-ms-agentconfig
        optional: true
    - name: ama-logs-secret
      secret:
       secretName: ama-logs-secret
    - name: ama-logs-adx-secret
      secret:
       secretName: ama-logs-adx-secret
       optional: true
{{- end }}
{{- end }}
