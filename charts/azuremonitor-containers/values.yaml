# Default values for azuremonitor-containers.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

## Microsoft OMS Agent image for kubernetes cluster monitoring
## ref: https://github.com/microsoft/Docker-Provider/tree/ci_prod
## Values of under Azure are being populated by Azure Arc K8s RP during the installation of the extension
Azure:
  Cluster:
    Cloud: <your_cluster_cloud>
    Region: <your_cluster_region>
    ResourceId: <your_cluster_id>
  Extension:
    Name: ""
    ResourceId: ""
  proxySettings:
    isProxyEnabled: false
    httpProxy: ""
    httpsProxy: ""
    noProxy: ""
    proxyCert: ""
    isCustomCert: false
    autonomousFqdn: "<arca_autonomous_fqdn>"
amalogs:
  image:
    repo: "mcr.microsoft.com/azuremonitor/containerinsights/ciprod"
    tag: "3.1.20"
    tagWindows: "win-3.1.20"
    pullPolicy: IfNotPresent
    dockerProviderVersion: "18.0.1-0"
    agentVersion: "azure-mdsd-1.31.1"
    winAgentVersion: "0.0.0-0" # there is no base agent version for windows agent

  # The priority used by the ama-logs priority class for the daemonset pods
  # Note that this is not execution piority - it is scheduling priority, as
  # in getting scheduled to the node.  This needs to be greater than 0 such
  # that the daemonset pods, which can not schedule onto different nodes as
  # they are defined to run on specific nodes, are not accidentally frozen
  # out of a node due to other pods showing up earlier in scheduling.
  # (DaemonSet pods by definition only are created once the node exists for
  # them to be created for and thus it is possible to have "normal" pods
  # already in line to run on the node before the DeamonSet controller got a
  # chance to build pod for the node and give it to the scheduler)
  # Should be some number greater than default (0)
  priority: 10

  # This flag used to determine whether to run is high log scale mode or not
  enableHighLogScaleMode: false

  # This used for running agent pods in test mode.
  # if set to true additional agent workflow logs will be emitted which are used for e2e and arc k8s conformance testing
  ISTEST: false

  # This flag used to determine whether to use AAD MSI auth or not for Arc K8s cluster
  useAADAuth: false

  # This flag used to determine whether this cluster is connected to ArcA control plane. This value will be setup before pushed into on-premise ArcA ACR.
  isArcACluster: false

  # This flag used to ignore the proxy settings
  ignoreExtensionProxySettings: false

  # This flag allows ama-logs pods to be scheduled on nodes with taints
  scheduleOnTaintedNodes: false

  # This flag to enable and disable service account timebound token and default is enabled
  enableServiceAccountTimeBoundToken: true

  # This flag to enable and disable custom metrics and default is enabled
  enableCustomMetrics: true

  ## To get your workspace id and key do the following
  ## You can create a Azure Loganalytics workspace from portal.azure.com and get its ID & PRIMARY KEY from 'Advanced Settings' tab in the Ux.

  secret:
    wsid: <your_workspace_id>
    key: <your_workspace_key>
  domain: opinsights.azure.com
  proxy: <your_proxy_config>
  # This metricsEndpoint used to define the endpoint custom metrics emit to. If not defined, default public Azure monitoring endpoint '{aks_region}.monitoring.azure.com' will be used.
  metricsEndpoint: <your_metrics_endpoint>
  tokenAudience: <your_token_audience>
  env:
    clusterName: <your_cluster_name>
    ## Applicable for only managed clusters hosted in Azure
    clusterId: <your_cluster_id>
    clusterRegion: <your_cluster_region>
  rbac: true
  sidecarscraping: true
  # Syslog collection on Arc K8s clusters requires additional config dependencies on the node and is currently not supported. Please open a service ticket if there is a syslog collection requirement.
  syslog:
    enabled: false
    syslogPort: 28330
  logsettings:
    logflushintervalsecs: "15"
    tailbufchunksizemegabytes: "1"
    tailbufmaxsizemegabytes: "1"
    ## Applicable for only Azure Stack Edge K8s since it has custom mount path for container logs which will have symlink to /var/log path
    custommountpath: ""

  ## Configure node tolerations for scheduling onto nodes with taints
  ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
  ## https://kubernetes.io/blog/2022/04/07/upcoming-changes-in-kubernetes-1-24/
  ##
  tolerations:
    - key: "node-role.kubernetes.io/control-plane"
      operator: "Exists"
      effect: "NoSchedule"
    - key: "node-role.kubernetes.io/control-plane"
      operator: "Exists"
      effect: "NoExecute"
    - key: "node-role.kubernetes.io/control-plane"
      operator: "Exists"
      effect: "PreferNoSchedule"
    - key: "node-role.kubernetes.io/master"
      operator: "Exists"
      effect: "NoSchedule"
    - key: "node-role.kubernetes.io/master"
      operator: "Exists"
      effect: "NoExecute"
    - key: "node-role.kubernetes.io/master"
      operator: "Exists"
      effect: "PreferNoSchedule"
  tolerationsUnrestricted:
    - operator: "Exists"
      effect: "NoSchedule"
    - operator: "Exists"
      effect: "NoExecute"
    - operator: "Exists"
      effect: "PreferNoSchedule"

  ## Pod scheduling preferences.
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  ##
  daemonset:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: kubernetes.io/os
              operator: In
              values:
                - linux
            - key: type
              operator: NotIn
              values:
                - virtual-kubelet
  deployment:
    affinity:
      nodeAffinity:
        # affinity to schedule on to ephemeral os node if its available
        preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            preference:
              matchExpressions:
              - key: storageprofile
                operator: NotIn
                values:
                - managed
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: kubernetes.io/os
              operator: In
              values:
                - linux
            - key: type
              operator: NotIn
              values:
                - virtual-kubelet
            - key: kubernetes.io/role
              operator: NotIn
              values:
                - master
  ## Configure resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ##
  resources:
    daemonsetlinux:
      requests:
        cpu: 75m
        memory: 325Mi
      limits:
        cpu: 150m
        memory: 750Mi
    daemonsetwindows:
      requests:
        cpu: 500m
        memory: 700Mi
      limits:
        cpu: 2
        memory: 2Gi
    deployment:
      requests:
        cpu: 150m
        memory: 250Mi
      limits:
        cpu: 1
        memory: 1Gi
    daemonsetlinuxsidecar:
        limits:
          cpu: 500m
          memory: 1Gi
        requests:
          cpu: 75m
          memory: 225Mi
