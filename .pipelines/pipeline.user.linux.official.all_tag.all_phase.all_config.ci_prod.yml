environment:
  host:
    os: 'linux'
    flavor: 'ubuntu'
    version: '16.04'
  runtime:
    provider: 'appcontainer'
    image: 'cdpxlinux.azurecr.io/user/azure-monitor/container-insights:1.0'

version:
  name: 'DockerProvider'
  major: 10
  minor: 0
  tag: 'beta'
  system: 'custom'
  exclude_commit: true

restore:
  commands:
    - !!defaultcommand
      name: 'get go modules'
      command: '.pipelines/restore-linux.sh'
      fail_on_stderr: false

build:
  commands:
    - !!buildcommand
      name: 'Build Docker Provider Shell Bundle'
      command: '.pipelines/build-linux.sh'
      fail_on_stderr: false
      artifacts:
        - from: 'deployment'
          to: 'build'
          include:
            - '**'
        - from: '.pipelines'
          to: 'build'
          include:
            - '*.sh'
        - from: 'kubernetes'
          to: 'build'
          include:
            - '*.yaml'
        - from: 'charts'
          to: 'build'
          include:
            - '**'
        - from: 'test/e2e'
          to: 'build'
          include:
            - '*.yaml'

package:
  commands:
    - !!dockerbuildcommand                               # REQUIRED: This maps the command data to a concrete type in the CDPX orchestrator.
      name: 'Build Docker Image'                          # REQUIRED: All commands have a name field. All console output captured when
                                                          #           this command runs is tagged with the value of this field.
      context_folder: 'kubernetes/linux'                  # REQUIRED: The repository root relative path of the folder containing the Dockerfile to build.
                                                          # In effect, the context folder will be repository_checkout_folder/src/DockerFinal.
      dockerfile_name: 'Dockerfile'                       # OPTIONAL: The name of the dockerfile. Docker client does allow the Dockerfile
                                                          # to be named differently. Defaults to Dockerfile.
                                                          # In effect, the -f option value passed to docker build will be repository_checkout_folder/src/DockerFinal/Foo.dockerfile.
      repository_name: 'cdpxlinux'                        # only supported ones are cdpx acr repos
      tag: 'ciprod'                                       # OPTIONAL: Defaults to latest. The tag for the built image. Final tag will be 1.0.0alpha, 1.0.0-timestamp-commitID.
      latest: false                                       # OPTIONAL: Defaults to false. If tag is not set to latest and this flag is set, then tag as latest as well and push latest as well.
      publish_unique_tag: true                            # If set, the image in the registry is tagged with the unique tag generated by CDPx
      metadata_file:
        artifact_path: 'linux-image-meta.json'            # If defined, the drop outputs relative path to the file into which JSON metadata about the created image is emitted.
      export_to_artifact_path: 'agentimage.tar.gz'   # path for exported image and use this instead of fixed tag
