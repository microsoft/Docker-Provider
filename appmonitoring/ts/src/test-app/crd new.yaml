apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: instrumentations.monitor.azure.com # name must match the spec fields below, and be in the form: <plural>.<group>
spec:
  group: monitor.azure.com # group name to use for REST API: /apis/<group>/<version>
  names:
    plural: instrumentations # plural name to be used in the URL: /apis/<group>/<version>/<plural>
    singular: instrumentation # singular name to be used as an alias on the CLI and for display
    kind: Instrumentation # kind is normally the PascalCase singular type. Your resource manifests use this.
  scope: Namespaced # either Namespaced or Cluster
  versions:
    - name: v1
      served: true # each version can be enabled/disabled. Defines whether k8s will serve this version to clients if asked to.
      storage: true # one and only one version must be marked as the storage version. This is how all CRs will be stored internally when crated.
      schema:
        openAPIV3Schema:
          description: >-
            Configures application monitoring in the current namespace. Multiple CRs of this kind are allowed within a namespace. 
            
            CR named _default_ will be used for every workload in the namespace unless speicifically overridden through annotations.
            To use a different CR _crName_ for a particular workload, mark it with _instrumentation.opentelemetry.io/inject-\<language\>="\<crName\>"_ annotation.

            Multiple annotations (for different languages) may be applied to the same workload. Annotations must be placed at the workload's spec level (_spec.template.metadata.annotations_) level. Currently, only deployments are supported.
            
            Examples of annotation usage:

            instrumentation.opentelemetry.io/inject-java="true"
            Uses the default CR for the namespace with Java instrumentation (regardless of which languages the default CR specifies)

            instrumentation.opentelemetry.io/inject-java="false"
            Disables all instrumentation regardless of which languages the default CR specifies, or which language-specific annotation is used.

            instrumentation.opentelemetry.io/inject-java="true"
            instrumentation.opentelemetry.io/inject-nodejs="true"
            Uses the default CR for the namespace with Java and NodeJs instrumentation (regardless of which languages the default CR specifies)

            instrumentation.opentelemetry.io/inject-java="true"
            instrumentation.opentelemetry.io/inject-nodejs="false"
            Uses the default CR for the namespace with Java (regardless of which languages the default CR specifies)

            instrumentation.opentelemetry.io/inject-java="alternativeCrInThisNamespace"
            Uses a different, non-default CR named _alternativeCrInThisNamespace_ found within the namespace with Java instrumentation (regardless of which languages that CR specifies)

            instrumentation.opentelemetry.io/inject-java="crName1"
            instrumentation.opentelemetry.io/inject-nodejs="crName2"
            Invalid configuration, deployment will fail.

            instrumentation.opentelemetry.io/inject-nodejs="crThatDoesNotExist"
            Invalid configuration since the CR does not exist, deployment will continue with no instrumentation.
          type: object
          required:
            - spec
          properties:
            spec:
              type: object
              required: 
                - settings
                - destination
              properties:
                settings:
                  description: Determines which settings to apply as part of this configuration.
                  type: object
                  required:
                    - autoInstrumentationPlatforms
                  properties:
                    imageRepoPath:
                      description: "Path to a repository to fetch auto-instrumentation images from. Only use if you have an Artifact Cache set up to host related images normally found on Microsoft Container Registry (MCR). See here for details: https://learn.microsoft.com/en-us/azure/container-registry/tutorial-artifact-cache"
                      type: string
                    autoInstrumentationPlatforms:
                      description: List of auto-instrumentation platforms to use (must match the type of the application running in the container). Can be empty to use none. Ignored for named (non-default) CRs.
                      type: array
                      minItems: 0
                      items:
                        type: string
                        enum:
                          - Java
                          - NodeJs
                        
                destination:
                  description: Sink for telemetry data
                  type: object
                  required:
                    - applicationInsightsConnectionString
                  properties:
                    applicationInsightsConnectionString:
                      description: Connection string of the Application Insights component to send telemetry data to.
                      type: string
